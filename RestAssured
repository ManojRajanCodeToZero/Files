import io.restassured.RestAssured;
import io.restassured.config.RestAssuredConfig;
import io.restassured.config.SSLConfig;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import io.restassured.response.ResponseBody;
import io.restassured.response.ValidatableResponse;
import io.restassured.specification.RequestSpecification;

static RestAssuredConfig rac = RestAssured.config().sslConfig(new SSLConfig().allowAllHostnames().relaxedHTTPSValidation("TLSv1.2"));





public static String getMethodResponseWithToken(String basePath) {
        String token = "eyJ4NXQiOiJNemt4TlRFeU1UVTJNek5tWlRRMll6SmhPV1kxWXpObVlUZGxabVprWkdJMk9XSXhNek14TnciLCJraWQiOiJNemt4TlRFeU1UVTJNek5tWlRRMll6SmhPV1kxWXpObVlUZGxabVprWkdJMk9XSXhNek14TnciLCJhbGciOiJSUzI1NiJ9.eyJhdF9oYXNoIjoiRGVOYUlJQjhmV3FZYmJCaXBDLThfdyIsInN1YiI6InN2Yy5jcnNkZXYuMDAxIiwiYXVkIjpbImNJeHlVSDg3ZTF1bTQxejFteE83NVZxVEVwWWEiXSwicm9sZSI6WyJBcHBsaWNhdGlvblwvc2NiLnJpc2suY3JzLWNvdW50ZXJwYXJ0eS1kYXRhLWFnZ3JlZ2F0b3Itc2VydmljZSIsIkFwcGxpY2F0aW9uXC9jcnMtZGVyaXZhdG9yLXNlcnZpY2UiLCJJbnRlcm5hbFwvZXZlcnlvbmUiLCJBcHBsaWNhdGlvblwvc2NiLnJpc2suYXBwdWJsaXNoZXJ8YWRtaW4iLCJBcHBsaWNhdGlvblwvY3JzLWxpbWl0LWNvbXBvbmVudC1zZXJ2aWNlfGFkbWluIiwiQXBwbGljYXRpb25cL3NjYi5yaXNrLmxtc3xhZG1pbiIsIkFwcGxpY2F0aW9uXC9jcnMtdmFsaWRhdG9yLXNlcnZpY2UiLCJBcHBsaWNhdGlvblwvY3JzLXRyYWRlLW9uYm9hcmRpbmctc2VydmljZSIsIkFwcGxpY2F0aW9uXC9yaXNrdmlldy5hcGkuY3JzLXJlYWRvbmx5IiwiQXBwbGljYXRpb25cL3NjYi5yaXNrLmNvbGxhdGVyYWwtZGF0YS1zZXJ2aWNlIiwiQXBwbGljYXRpb25cL3NjYi5yaXNrLmxpbWl0LWF2cm8tZmlsdGVyLXNlcnZpY2V8YWRtaW4iLCJBcHBsaWNhdGlvblwvY3JzLWdlbmVyaWMtYWRkb24tc2VydmljZSIsIkFwcGxpY2F0aW9uXC9jb2xsYXRlcmFsLWF2cm8tY29udmVydGVyfGFkbWluIiwiQXBwbGljYXRpb25cL3NjYi5yaXNrLmNycy1sb29rdXAtc2VydmljZSIsIkFwcGxpY2F0aW9uXC9zY2Iucmlzay5jcnMtY3JlZGl0LWNvdW50ZXJwYXJ0eS1zZXJ2aWNlfGFkbWluIiwiQXBwbGljYXRpb25cL3Jpc2t2aWV3LmFwaS51c2VyLW1ndC1yZWFkb25seSIsIkFwcGxpY2F0aW9uXC9zY2Iucmlzay5jcnMtY3VzdG9tZXItaGllcmFyY2h5LXNlcnZpY2V8YWRtaW4iLCJBcHBsaWNhdGlvblwvc2NiLnJpc2suY29sbGRhdGFzZXJ2aWNlfGFkbWluIl0sImF6cCI6ImNJeHlVSDg3ZTF1bTQxejFteE83NVZxVEVwWWEiLCJhbXIiOlsicGFzc3dvcmQiXSwibmFtZSI6InN2Yy5jcnNkZXYuMDAxIiwiaXNzIjoiaHR0cHM6XC9cL3VrbHZhZGFwcDM4NC56b25lMS5zY2IubmV0OjMxNDQ3XC9vYXV0aDJcL3Rva2VuIiwidGl0bGUiOiJzdmMuY3JzZGV2LjAwMSIsImV4cCI6MTU5Mzc2MDc2NSwiaWF0IjoxNTkzNzU3MTY1LCJlbWFpbCI6InN2Yy5jcnNkZXYuMDAxQHNjLmNvbSJ9.XyR6Hw0BfWi0KStS91AgCmFcLyGpmoPk5D0GCJxVtBrna4t9NZ33SAVzcLZa8DRPtV3W4mqaCVPebfwlsK6UdFb47-94ZBTWppg_omHMZnO8JWTslA_ONoVQIaPNcfIPnW3JBeOrPrtsU_VPdVcZyB4c_NA0DMDU20lN2LlK4-N6-HL1Nz_WGRPYX-vm1elomqjtE4Rtr1SE2weFCFtmU18Xtc-CeeghbzXX9mYIg2WUyvFGkYS4aKXSTJp26fHJx9etroTyfNG4qMQL1CCPLaBUKxZb4L5wrzcyVEhHru642zqpbc3OQoGMeNsf74LTzNQv_3xPKPuZhfg4UHB5QQ";
        RequestSpecification request = RestAssured.given().header("Authorization","Bearer "+token,"Content-Type","application/json","application","crs-customer-hierarchy-service");
        request.config(rac);

        Response response = request.get(basePath);
        ResponseBody responseBody = response.body();
        return responseBody.asString();

    }




basePath : https://--/api/hierarchy/customerhierarchy?counterpartyLEID=11005254


Exception: {"timestamp":"2020-09-20T09:39:11.252+0000","status":500,"error":"Internal Server Error","message":"Method public org.springframework.http.ResponseEntity com.scb.cri.customer.hierarchy.controller.id(java.lang.String) is not authorized. Permission Required: view, userId:xxxxxx but scoped toke is null","path":"/customerhierarchy"}
